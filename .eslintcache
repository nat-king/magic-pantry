[{"/Users/nat/src/github.com/Shopify/magic-pantry/src/App.js":"1","/Users/nat/src/github.com/Shopify/magic-pantry/src/components/Recipe.js":"2","/Users/nat/src/github.com/Shopify/magic-pantry/src/components/Instructions.js":"3","/Users/nat/src/github.com/Shopify/magic-pantry/src/index.js":"4","/Users/nat/src/github.com/Shopify/magic-pantry/src/components/Ingredients.js":"5","/Users/nat/src/github.com/Shopify/magic-pantry/src/components/Recipes.js":"6","/Users/nat/src/github.com/Shopify/magic-pantry/src/components/RecipeList.js":"7"},{"size":1681,"mtime":1613269578326,"results":"8","hashOfConfig":"9"},{"size":1867,"mtime":1613268549481,"results":"10","hashOfConfig":"9"},{"size":1185,"mtime":1613266446899,"results":"11","hashOfConfig":"9"},{"size":307,"mtime":1611366634179,"results":"12","hashOfConfig":"9"},{"size":1263,"mtime":1613266435425,"results":"13","hashOfConfig":"9"},{"size":773,"mtime":1613268585751,"results":"14","hashOfConfig":"9"},{"size":910,"mtime":1613266479977,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"v4ixsq",{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nat/src/github.com/Shopify/magic-pantry/src/App.js",[],"/Users/nat/src/github.com/Shopify/magic-pantry/src/components/Recipe.js",["31"],"/Users/nat/src/github.com/Shopify/magic-pantry/src/components/Instructions.js",["32"],"/Users/nat/src/github.com/Shopify/magic-pantry/src/index.js",[],"/Users/nat/src/github.com/Shopify/magic-pantry/src/components/Ingredients.js",["33"],"import React, {useState} from 'react';\nimport {Card, Layout, Stack, Button, ButtonGroup, OptionList} from '@shopify/polaris';\nimport {useRouteMatch} from 'react-router-dom';\nimport { recipeData } from \"./data\";\n\n\nfunction Ingredients() {\n  let match = useRouteMatch();\n  const [selected, setSelected] = useState([]);\n  const recipeId =  match.url.slice(9,-12);\n  const recipe = recipeData.filter((data) => {\n    return data.recipeId == recipeId;\n  });\n\n  const ingredientsList = recipe[0].ingredients;\n  \n  const recipeUrl = `https://nat-king.github.io/magic-pantry${match.url.slice(0,-12)}`;\n  \n  return (\n    <Layout>\n      <Layout.Section>\n        <Card sectioned={true}\n        title='Ingredients'\n        >\n          <OptionList\n            onChange={setSelected}\n            options={ingredientsList}\n            selected={selected}\n            allowMultiple\n          />\n        </Card>\n      </Layout.Section>\n      <Layout.Section>\n      <Stack vertical={true} spacing=\"extraLoose\" alignment=\"center\">\n      <ButtonGroup>\n        <Button url={`${recipeUrl}`}>Back</Button>\n        <Button url={`${recipeUrl}/instructions`}>Instructions</Button>\n      </ButtonGroup>\n      </Stack>\n      </Layout.Section>\n   </Layout>\n  );\n}\n\nexport default Ingredients;\n","/Users/nat/src/github.com/Shopify/magic-pantry/src/components/Recipes.js",[],"/Users/nat/src/github.com/Shopify/magic-pantry/src/components/RecipeList.js",[],{"ruleId":"34","severity":1,"message":"35","line":18,"column":26,"nodeType":"36","messageId":"37","endLine":18,"endColumn":28},{"ruleId":"34","severity":1,"message":"35","line":10,"column":26,"nodeType":"36","messageId":"37","endLine":10,"endColumn":28},{"ruleId":"34","severity":1,"message":"35","line":12,"column":26,"nodeType":"36","messageId":"37","endLine":12,"endColumn":28},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]